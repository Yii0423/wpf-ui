<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:diy="clr-namespace:wpf_ui.Extends.DiyControls">

    <!-- #region 引用配置 -->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Style/Setting.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- #endregion -->

    <!-- #region 下拉框 -->

    <!-- 原始下拉按钮 -->
    <Style x:Key="TgbPrimary" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="0" Background="Transparent">
                        <Path x:Name="path" Margin="3,0,0,0" Fill="{StaticResource BrushCold}" Style="{DynamicResource Icon}" 
                              Data="{DynamicResource Icon-Chevron-Down}">
                            <Path.RenderTransform>
                                <RotateTransform x:Name="trans" Angle="180"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="path" Property="Fill" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="{StaticResource BrushChecked}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="path" Property="Fill" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="{StaticResource BrushChecked}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="trans" Storyboard.TargetProperty="Angle" From="180" To="360" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="trans" Storyboard.TargetProperty="Angle" From="360" To="180" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 原始下拉框 -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="MaxDropDownHeight" Value="300"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!-- ComBoxItem -->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="30"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border x:Name="border" Background="Transparent" Cursor="Hand">
                                    <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BrushPrimary}"/>
                                        <Setter TargetName="border" Property="Background" Value="{StaticResource BrushChecked}"/>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BrushPrimary}"/>
                                        <Setter TargetName="border" Property="Background" Value="{StaticResource BrushChecked}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Gray"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <!-- ComboBox -->
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7*"/>
                            <ColumnDefinition Width="3*" MaxWidth="30"/>
                        </Grid.ColumnDefinitions>
                        <diy:DiyTextbox Text="{TemplateBinding Text}" Style="{DynamicResource TbDefault}" BorderThickness="0"/>
                        <Border x:Name="bd1" BorderThickness="1,1,0,1" BorderBrush="{StaticResource BrushCold}"/>
                        <Border x:Name="bd2" Grid.Column="1" BorderThickness="0,1,1,1" BorderBrush="{StaticResource BrushCold}">
                            <ToggleButton ClickMode="Press" Style="{StaticResource TgbPrimary}" 
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                        <Popup x:Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" Focusable="False" 
                               AllowsTransparency="True" PopupAnimation="Fade">
                            <Border x:Name="DropDown" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="3" Color="Black" Opacity="0.8"/>
                                </Border.Effect>
                                <ScrollViewer Margin="1,3,1,1" Style="{DynamicResource ForScrollviewer}" MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                              SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="bd1" Property="BorderBrush" Value="{DynamicResource BrushChecked}"/>
                                <Setter TargetName="bd2" Property="BorderBrush" Value="{DynamicResource BrushChecked}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- #endregion -->

</ResourceDictionary>